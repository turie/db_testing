---

#--------------------------------------------------------------------
# Each service provisioned must have an entry in the 'services'
# dictionary.  The service name is the key under 'services'
# and will be used to determine the name of various roles to
# be provisioned (e.g. aggrs). The service name must be provided in every
# request sent to Tower
#--------------------------------------------------------------------

services:
  nas_provision:
    create:
      microservices:
        # - ontap_disks
        # - ontap_aggr
        # - ontap_vserver
        - ontap_volume
        - ontap_qtree
        - ontap_quotas
        # - ontap_qos_policy_group
      defaults:
        ontap_disks:
          use_rest:               auto
        ontap_aggr:
          state:                  present
        ontap_vserver:
          state:                  present
        ontap_volume:
          snapshot_policy:        'default'
          percent_snapshot_space: 5
          volume_security_style:  'unix'
          unix_permissions:       '775'
          efficiency_policy:      'default'
          space_guarantee:        'none'
          #junction_path:          "/{{name}}"  #Go here or will this be delivered in payload
        ontap_qtree:
          security_style:         'mixed'
          state:                  'present'
        ontap_quotas:
          type:                   'tree'
        ontap_qos_policy_group: {}
        ontap_export_policy_rule:
            ro_rule:                  'none'
            rw_rule:                  'none'
        ontap_export_policy:  {}

      standards:
        nas_premium:
          ontap_disks:              {}
          ontap_aggr:               {}
          ontap_vserver:            {}
          ontap_volume:
            size_unit:            'gb'
          ontap_qtree:
            oplocks:              'disabled'
          ontap_quotas:
            type:                   'tree'
          ontap_qos_policy_group: {}
          ontap_export_policy_rule: {}
          ontap_export_policy:  {}
    read:
      microservices:
        - ontap_volume
        - ontap_qtree
    update:
      microservices:
        - ontap_volume
        - ontap_qtree
    delete:
      microservices:
        - ontap_volume
      defaults:
        - state: 'absent'

  cifs_share:
    - ontap_volume
    - ontap_cifs_share
    - ontap_cifs_access

  block:
    - ontap_volume
    - ontap_lun

  cluster_day0:
    - ontap_aggr
    - ontap_broadcast_domain
    - ontap_net_broadcast_ports
    - ontap_net_ifgrp
    - ontap_vlan
    
  cluster_day1:
    - ontap_vserver
    - ontap_cifs
    - ontap_nfs


#################################################################################
# 8-27-2020 JS   Default and standard dictionaries below have been replaced by 
# consolidate "services" dicctionary above as per Todd Urie
#################################################################################
#--------------------------------------------------------------------
# Default attributes are used when requests for resources is given without
# values for certain attributes.  Default attributes are not used if 
# attribute values are passed, only when they are not and required for the
# service role to execute
#--------------------------------------------------------------------

# default_attributes:
#    ontap_volume:
#       snapshot_policy:        'default'
#       percent_snapshot_space: 5
#       #encrypt:                yes
#       volume_security_style:  'unix'
#       unix_permissions:       '775'
#       efficiency_policy:      'default'
#       space_guarantee:        'none'  



#--------------------------------------------------------------------
# Standards - these provide values for storage resource attributes 
# but cannot be overriden by request values.
#--------------------------------------------------------------------

# standard_attributes:
#   ontap_volume:
#     snapshot_policy:        'default'
#     percent_snapshot_space: 5
#     #encrypt:                yes
#     volume_security_style:  'unix'
#     unix_permissions:       '775'
#     efficiency_policy:      'default'
#     space_guarantee:        'none'  

