---

- name:          'Entry point for Cluster Provisioning'
  hosts:         localhost
  gather_facts:  no

  # For development - expected pass as extra_vars
  vars:
    site: 'site'
    site_type: 'mso'
    site_instance: '001'
    hostname: '172.16.132.200'
    username: 'admin'
    password: 'Netapp1!'

    raw_service_request:  
      service: 'nfs_base'
      operation: 'create'
      std_name:  'nas_standard'
      req_details:
        ontap_volume:
          - name: 'vol01'
            vserver: 'svm1'
            aggregate_name: 'aggr1'
            size: '1'
            space_guarantee: 'volume'
          - name: 'vol02'
            vserver: 'svm1'
            aggregate_name: 'aggr1'
            size: '1'
            size_unit: 'tb'
        ontap_qtree:
          - name: 'qtree1'
            vserver: 'svm1'
            flexvol_name: 'vol01'
          - name: 'qtree1'
            vserver: 'svm1'
            flexvol_name: 'vol02'


  tasks:
    # Check values needed as Asseertions.  These should be defined in passed extra_vars
    - name:    'verify required inputs'
      assert:
        that:
          -  site                is defined
          -  site_type           is defined
          -  site_instance       is defined

    - name: 'Save initial request details'
      set_fact:
        global_completed_request:  "{{ raw_service_request['req_details'] }}"

    - name: 'Add Default values to provisioning request payload'
      include_role:
        name:     "na/set_defaults"
      vars:
        mode: 'notest'
        res_type:   "{{ loop_res_type }}"
        service:    "{{ raw_service_request['service'] }}"
        operation:  "{{ raw_service_request['operation'] }}"
        resources:  "{{ raw_service_request['req_details'][loop_res_type] }}"
      loop:     "{{ raw_service_request.req_details.keys() }}"    
      loop_control:
        loop_var:     loop_res_type

    - name: 'Enforce provisioning standards on request payload'
      include_role:
        name:     "na/set_standards"
      vars:
        mode: 'notest'
        res_type:   "{{ loop_res_type }}"
        service:    "{{ raw_service_request['service'] }}"
        operation:         "{{ raw_service_request['operation'] }}"
        std_name:   "{{ raw_service_request['std_name'] }}"
        resources:  "{{ global_completed_request[loop_res_type] }}"
      loop:     "{{ raw_service_request.req_details.keys() }}"    
      loop_control:
        loop_var:     loop_res_type

    - name:    'execute each of the provisioning roles'
      include_role:
        name:       "na/{{ loop_resource }}"
        public:     no
      vars:
        args:       "{{ global_completed_request[loop_resource] }}" 
        mode:       "test"
      loop:          "{{ services[raw_service_request.service][raw_service_request.operation]['microservices'] }}"  
      loop_control:
        loop_var:   loop_resource
      register:      role_result
      ignore_errors:    true
      # when:
      #   - loop_resource | regex_search(types_regex)


